import Header from "@/components/Blogs";

import BentoCard, {
  BentoBackground,
  BentoContainer,
  BentoFlavicon,
  BentoImage,
  BentoSubtitle,
  BentoText,
  BentoTitle,
  BentoToolTip,
} from "@/components/BentoCard";

import { fetchData } from "@/lib/datafetch/getHome";
import { getAutogeneratedPublicationOG } from "@/lib/social/og";
import { Github } from "lucide-react";
import Image from "next/image";
import Link from "next/link";

import LoadMore from "@/components/LoadMore";
import Shop from "./shop/page";
import LinkPreview from "@/components/Widgets/LinkPreview";

export async function generateMetadata() {
  const staticdata = await fetchData();

  const publication = staticdata.data.publication;

  return {
    title: publication?.displayTitle || publication?.title,

    description:
      publication?.descriptionSEO ||
      publication?.title ||
      `${publication?.author.name}'s Blog`,
    openGraph: {
      title: publication?.title,
      description: publication?.descriptionSEO,

      authors: [publication?.author?.name],
      images: publication?.ogMetaData?.image,
      locale: "en_US",
      type: "website",
    },

    twitter: {
      title: publication?.displayTitle || publication?.title,
      description:
        publication?.descriptionSEO ||
        publication?.title ||
        `${publication?.author?.name}'s Blog`,
      card: "summary_large_image",
      images: {
        url:
          publication?.ogMetaData.image ||
          getAutogeneratedPublicationOG(publication),
        alt: publication?.displayTitle || publication?.title,
      },
    },
    icons: {
      icon: publication?.favicon,
    },
  };
}

const SmallBento = ({
  value,
  link,

  type,
}: {
  value?: any;
  link?: string;

  type?: any;
}) => {
  const colors: any = {
    twitter: {
      color: "#1DA1F2",
      regx: /twitter\.com\/([a-zA-Z0-9_]+)/,
    },
    figma: {
      color: "#F24E1E",
      regx: /figma\.com\/(user|users)\/([a-zA-Z0-9-]+)/,
    },
    github: { color: "#1B1F23", regx: /github\.com\/([a-zA-Z0-9-]+)/ },
    instagram: { color: "#E4405F", regx: /instagram\.com\/([a-zA-Z0-9_]+)/ },
    linkedin: { color: "#0077B5", regx: /linkedin\.com\/in\/([a-zA-Z0-9-]+)/ },
    youtube: { color: "#fff", regx: /youtube\.com\/channel\/([a-zA-Z0-9_-]+)/ },
    website: { color: "#fff", regx: /https?:\/\/(?:www\.)?([a-zA-Z0-9_-]+)/ },

    mastodon: { color: "#2C5282", regx: null },
    dailydev: { color: "#333", regx: /app\.daily\.dev\/([a-zA-Z0-9_]+)/ },
    hashnode: { color: "#fff", regx: /hashnode.com\/@([a-zA-Z0-9-]+)/ },
  };

  const username = link?.match(colors[type]?.regx)?.[1];

  return (
    link && (
      <BentoCard
        className=" motion-reduce:animate-none animate-in fade-in-10 slide-in-from-bottom-9 delay-75 duration-700"
        isLink
        href={link}
        type={"small"}
      >
        <BentoContainer type="small">
          <BentoFlavicon icon={type} type="small" />
          <div className="flex flex-col gap-4 mt-2">
            <BentoSubtitle type="small">{username}</BentoSubtitle>
            <BentoTitle type="small">{value}</BentoTitle>
          </div>
        </BentoContainer>
        <BentoBackground
          classname="opacity-10"
          background={colors[value]?.color}
        />
      </BentoCard>
    )
  );
};

export default async function Home() {
  const staticdata = await fetchData();

  const links = staticdata.data.publication.links;

  return (
    <div className="flex h-fit w-full flex-row gap-20 lg:gap-0 justify-between  md:justify-around  items-start    max-md:flex-col max-md:items-center ">
      <div className="  mr-28 max-md:mr-0  relative  lg:sticky lg:h-screen top-24 max-lg:justify-start max-w-[320px] max-h-[500px]  justify-center items-center flex">
        <Header staticdata={staticdata} />
      </div>

      <div className=" flex flex-col   text-left max-w-3xl  py-24 ">
        <div className="flex flex-wrap gap-5 justify-center">
          {Object.entries(links).map(([key, value]) => (
            <SmallBento
              key={key}
              value={key}
              link={(value as string) || ""}
              type={key}
            />
          ))}
        </div>

        <Link
          id="writings"
          href={"#writings"}
          className="my-10 font-semibold text-2xl items-center flex gap-1"
        >
          <div className="font-sm text-neutral-500">{"##  "}</div>
          Writings
        </Link>

        <div className="flex flex-wrap gap-8 justify-center">
          {staticdata.data.publication.posts.edges.map((e: any) => {
            return (
              <BentoCard
                type="large"
                key={e.node.id}
                isLink
                href={"/blogs/" + e.node.slug}
              >
                <BentoContainer type="large">
                  <div className="flex flex-col min-h-full gap-3 justify-between ">
                    <div className="flex flex-col gap-2">
                      <BentoTitle>{e.node.title}</BentoTitle>
                      <BentoSubtitle>{e.node.subtitle}</BentoSubtitle>
                    </div>
                    <BentoImage
                      type="large"
                      src={e.node.coverImage.url}
                      alt={e.node.title}
                    >
                      <BentoToolTip type="small">
                        {e.node.readTimeInMinutes} mins
                      </BentoToolTip>
                    </BentoImage>
                  </div>
                </BentoContainer>
              </BentoCard>
            );
          })}
        </div>

        <LoadMore
          initialPageInfo={staticdata.data.publication.posts.pageInfo}
        />

        <Link
          href={"#products"}
          id="products"
          className="my-2 font-semibold text-2xl items-center flex gap-1"
        >
          <div className="font-sm text-neutral-500">{"##  "}</div>
          Shop
        </Link>

        <Shop />
      </div>
    </div>
  );
}
